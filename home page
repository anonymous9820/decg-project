import React, { useEffect, useMemo, useState } from "react";
import { HashRouter, Routes, Route, Link, useNavigate } from "react-router-dom";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import {
  Clock,
  Globe,
  Heart,
  Award,
  Brain,
  CalendarClock,
  BadgeCheck,
  Coins,
  Sparkles
} from "lucide-react";

// --- Design Tokens ---
const brand = {
  primary: "#0A5BCD", // dominant blue
  primaryDark: "#083E8A",
  accent: "#3AA0FF",
  ink: "#0F172A",
  muted: "#64748B",
  surface: "#FFFFFF",
  soft: "#F1F5F9",
};

// --- Global Layout with persistent Navbar ---
function Navbar() {
  return (
    <div className="fixed inset-x-0 top-0 z-50 border-b border-slate-200/60 bg-white/90 backdrop-blur supports-[backdrop-filter]:bg-white/60">
      <div className="mx-auto flex max-w-7xl items-center justify-between px-4 py-3 sm:px-6 lg:px-8">
        <Link to="/" className="flex items-center gap-3">
          <div className="h-9 w-9 rounded-2xl bg-[var(--brand-primary)] shadow-inner" />
          <span className="text-lg font-semibold tracking-tight text-slate-900">Dis l’externe, c’est grave ?</span>
        </Link>
        <nav className="hidden gap-6 md:flex">
          <Link className="text-sm font-medium text-slate-700 hover:text-slate-900" to="/">Accueil</Link>
          <Link className="text-sm font-medium text-slate-700 hover:text-slate-900" to="/plateforme">La plateforme</Link>
        </nav>
        <div className="flex items-center gap-2">
          <Link to="/plateforme">
            <Button className="rounded-2xl px-4" style={{ backgroundColor: brand.primary }}>
              Découvrir
            </Button>
          </Link>
        </div>
      </div>
    </div>
  );
}

function Shell({ children }: { children: React.ReactNode }) {
  // CSS variables for theme
  return (
    <div style={{
      ['--brand-primary' as any]: brand.primary,
      ['--brand-primary-dark' as any]: brand.primaryDark,
      ['--brand-accent' as any]: brand.accent,
    }}>
      <Navbar />
      <main className="pt-16">{children}</main>
      <footer className="border-t border-slate-200 bg-white/70">
        <div className="mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8 text-sm text-slate-500">
          © {new Date().getFullYear()} DECG — Dis l’externe, c’est grave ?
        </div>
      </footer>
    </div>
  );
}

// --- Page 1: Première section – Promesse centrale ---
function HomeHero() {
  const navigate = useNavigate();
  return (
    <section className="relative min-h-[calc(100vh-4rem)] overflow-hidden">
      {/* background */}
      <div
        aria-hidden
        className="pointer-events-none absolute inset-0 -z-10"
        style={{
          background:
            "radial-gradient(1200px 600px at 10% 10%, rgba(58,160,255,0.18), transparent 60%), radial-gradient(800px 400px at 90% 30%, rgba(10,91,205,0.12), transparent 60%)",
        }}
      />

      <div className="mx-auto grid max-w-7xl grid-cols-1 items-center gap-10 px-4 pb-24 pt-20 sm:px-6 lg:grid-cols-12 lg:gap-8 lg:px-8">
        <div className="lg:col-span-7">
          <motion.h1
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-4xl font-bold tracking-tight text-slate-900 md:text-5xl"
          >
            Mieux comprendre, c’est mieux guérir
          </motion.h1>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.7, delay: 0.05 }}
            className="mt-4 max-w-2xl text-lg leading-relaxed text-slate-600"
          >
            Patient, aidant ou étudiant, venez apprendre et partager pour une meilleure santé globale
          </motion.p>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.1 }}
            className="mt-8 flex flex-wrap items-center gap-3"
          >
            <Button
              className="h-12 rounded-2xl px-6 text-base"
              style={{ backgroundColor: brand.primary }}
              onClick={() => navigate("/plateforme#poser-question")}
            >
              Poser une question
            </Button>
            <Button
              variant="outline"
              className="h-12 rounded-2xl border-2 px-6 text-base"
              onClick={() => navigate("/plateforme#donner-reponse")}
            >
              Donner une réponse
            </Button>
          </motion.div>
        </div>

        {/* Illustration */}
        <div className="relative lg:col-span-5">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.15 }}
            className="mx-auto w-full max-w-xl"
          >
            <HeroIllustration />
          </motion.div>
        </div>
      </div>

      {/* Decorative bottom illustration placement */}
      <div className="pointer-events-none absolute inset-x-0 bottom-0 flex justify-center pb-4">
        <Sparkles className="h-8 w-8 text-[var(--brand-accent)] opacity-60" />
      </div>
    </section>
  );
}

function HeroIllustration() {
  // Simple composed SVGs: conversation bubbles + medical imagery (stethoscope)
  return (
    <div className="relative aspect-[4/3] w-full">
      <div className="absolute inset-0 rounded-3xl bg-white shadow-xl ring-1 ring-slate-200" />
      <svg viewBox="0 0 800 600" className="absolute inset-0 h-full w-full">
        {/* background grid */}
        <defs>
          <pattern id="grid" width="20" height="20" patternUnits="userSpaceOnUse">
            <path d="M 20 0 L 0 0 0 20" fill="none" stroke="#e5e7eb" strokeWidth="1" />
          </pattern>
          <linearGradient id="bubble" x1="0" x2="1">
            <stop offset="0%" stopColor="#3AA0FF" stopOpacity="0.25" />
            <stop offset="100%" stopColor="#0A5BCD" stopOpacity="0.35" />
          </linearGradient>
        </defs>
        <rect x="0" y="0" width="800" height="600" fill="url(#grid)" />
        {/* chat bubbles */}
        <g>
          <rect x="80" y="120" rx="18" ry="18" width="260" height="90" fill="url(#bubble)" />
          <polygon points="140,210 160,210 150,230" fill="url(#bubble)" />
          <rect x="360" y="210" rx="18" ry="18" width="300" height="100" fill="url(#bubble)" />
          <polygon points="620,310 600,310 610,330" fill="url(#bubble)" />
          <rect x="160" y="330" rx="18" ry="18" width="280" height="90" fill="url(#bubble)" />
          <polygon points="210,420 230,420 220,440" fill="url(#bubble)" />
        </g>
        {/* stethoscope */}
        <g stroke="#0A5BCD" strokeWidth="6" fill="none">
          <path d="M520 120 q40 40 0 80" />
          <circle cx="520" cy="120" r="14" fill="#0A5BCD" />
          <path d="M540 200 q30 70 -20 110 t-100 30" />
          <path d="M420 440 q-40 -10 -40 -60" />
          <circle cx="380" cy="380" r="26" />
        </g>
      </svg>
    </div>
  );
}

// --- Page 2: Deuxième & Troisième sections ---
function PlatformPage() {
  return (
    <>
      <SectionTwo />
      <SectionThree />
    </>
  );
}

function SectionTwo() {
  return (
    <section className="relative bg-white py-16 sm:py-20">
      <div className="mx-auto grid max-w-7xl grid-cols-1 gap-10 px-4 sm:px-6 lg:grid-cols-12 lg:gap-12 lg:px-8">
        {/* left short column */}
        <div className="lg:col-span-4">
          <h2 className="text-3xl font-bold tracking-tight text-slate-900">Un échange gagnant-gagnant</h2>
          <p className="mt-4 text-slate-600">
            Dis l’externe, c’est grave ? vise à créer un lien entre étudiants et patients à travers un espace numérique d’échange favorisant la formation des étudiants et la santé des patients.
          </p>
        </div>
        {/* right long column */}
        <div className="lg:col-span-8">
          <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
            {/* Avantages patients */}
            <Card className="rounded-2xl">
              <CardContent className="p-6">
                <div className="mb-3 flex items-center gap-3">
                  <BadgeCheck className="h-5 w-5" />
                  <h3 className="text-lg font-semibold">Pour les patients</h3>
                </div>
                <ul className="space-y-4 text-slate-600">
                  <li className="flex items-start gap-3">
                    <Clock className="mt-0.5 h-5 w-5 flex-none" />
                    <div>
                      <p className="font-medium text-slate-800">Rapidité</p>
                      <p>Inutile de prendre un rendez-vous, vous pouvez consulter 24/24h</p>
                    </div>
                  </li>
                  <li className="flex items-start gap-3">
                    <Globe className="mt-0.5 h-5 w-5 flex-none" />
                    <div>
                      <p className="font-medium text-slate-800">Accessibilité</p>
                      <p>L’accès à l’information est gratuit, posez une question sans frais</p>
                    </div>
                  </li>
                  <li className="flex items-start gap-3">
                    <Heart className="mt-0.5 h-5 w-5 flex-none" />
                    <div>
                      <p className="font-medium text-slate-800">Empathie</p>
                      <p>Le médecin expérimenté a perdu sa sensibilité, ce n’est pas le cas de nos étudiants engagés</p>
                    </div>
                  </li>
                </ul>
              </CardContent>
            </Card>

            {/* Avantages étudiants */}
            <Card className="rounded-2xl">
              <CardContent className="p-6">
                <div className="mb-3 flex items-center gap-3">
                  <Award className="h-5 w-5" />
                  <h3 className="text-lg font-semibold">Pour les étudiants</h3>
                </div>
                <ul className="space-y-4 text-slate-600">
                  <li className="flex items-start gap-3">
                    <Coins className="mt-0.5 h-5 w-5 flex-none" />
                    <div>
                      <p className="font-medium text-slate-800">Valorisation</p>
                      <p>Non seulement vous améliorez la vie d’un autre, mais vous bénéficiez d’une rémunération et reconnaissance sur votre CV</p>
                    </div>
                  </li>
                  <li className="flex items-start gap-3">
                    <Brain className="mt-0.5 h-5 w-5 flex-none" />
                    <div>
                      <p className="font-medium text-slate-800">Efficacité</p>
                      <p>Plutôt que d’apprendre la théorie, vous passez à la pratique, améliorant votre mémorisation et votre préparation aux ECOS</p>
                    </div>
                  </li>
                  <li className="flex items-start gap-3">
                    <CalendarClock className="mt-0.5 h-5 w-5 flex-none" />
                    <div>
                      <p className="font-medium text-slate-800">Flexibilité</p>
                      <p>Vous décidez du moment et du domaine auquel vous souhaitez participer</p>
                    </div>
                  </li>
                </ul>
              </CardContent>
            </Card>
          </div>

          {/* Inline anchors for CTAs */}
          <div id="poser-question" className="mt-10">
            <CTACluster kind="patient" />
          </div>
          <div id="donner-reponse" className="mt-6">
            <CTACluster kind="etudiant" />
          </div>
        </div>
      </div>
    </section>
  );
}

function CTACluster({ kind }: { kind: "patient" | "etudiant" }) {
  const label = kind === "patient" ? "Poser une question" : "Donner une réponse";
  return (
    <div className="flex flex-wrap items-center gap-3">
      <Button className="rounded-2xl px-5" style={{ backgroundColor: brand.primary }}>{label}</Button>
      <Button variant="outline" className="rounded-2xl border-2 px-5">En savoir plus</Button>
    </div>
  );
}

// --- Stats (Troisième section) ---
function SectionThree() {
  const [stats, setStats] = useState<{ patients: number; etudiants: number; questions: number; reponseMoyenneSec: number } | null>(null);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    let cancelled = false;

    async function load() {
      try {
        const res = await fetch("/api/stats", { headers: { Accept: "application/json" } });
        if (!res.ok) throw new Error("HTTP " + res.status);
        const data = await res.json();
        if (!cancelled) setStats(data);
      } catch (e: any) {
        // graceful fallback demo values
        if (!cancelled) {
          setError("Données de démonstration affichées");
          setStats({ patients: 1284, etudiants: 642, questions: 3129, reponseMoyenneSec: 3600 });
        }
      }
    }

    load();
    const id = setInterval(load, 30_000); // refresh every 30s
    return () => { cancelled = true; clearInterval(id); };
  }, []);

  const meanReply = useMemo(() => {
    const s = stats?.reponseMoyenneSec ?? 0;
    if (!s) return "—";
    if (s < 60) return `${Math.round(s)} s`;
    const m = Math.floor(s / 60);
    const sec = s % 60;
    if (m < 60) return `${m} min ${sec}s`;
    const h = Math.floor(m / 60);
    const remM = m % 60;
    return `${h} h ${remM} min`;
  }, [stats]);

  return (
    <section className="relative overflow-hidden bg-[color:var(--brand-primary-dark)] py-16 text-white sm:py-20">
      <div className="absolute inset-x-0 -top-20 -z-10 h-40 bg-gradient-to-b from-transparent to-[color:var(--brand-primary-dark)]/60" />
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <div className="mb-10 flex items-end justify-between gap-6">
          <h2 className="text-3xl font-bold tracking-tight">Statistiques en temps réel</h2>
          {error && <p className="text-sm opacity-80">{error}</p>}
        </div>
        <div className="grid grid-cols-2 gap-4 md:grid-cols-4">
          <StatCard title="Patients" value={stats?.patients} />
          <StatCard title="Étudiants" value={stats?.etudiants} />
          <StatCard title="Questions posées" value={stats?.questions} />
          <StatCard title="Une réponse en" value={meanReply} />
        </div>
      </div>
    </section>
  );
}

function StatCard({ title, value }: { title: string; value: number | string | undefined }) {
  return (
    <div className="rounded-2xl bg-white/10 p-6 ring-1 ring-white/15 backdrop-blur">
      <p className="text-sm/6 opacity-80">{title}</p>
      <p className="mt-2 text-3xl font-semibold tracking-tight">{value ?? "—"}</p>
    </div>
  );
}

// --- App Router ---
export default function App() {
  return (
    <HashRouter>
      <Shell>
        <Routes>
          <Route path="/" element={<HomeHero />} />
          <Route path="/plateforme" element={<PlatformPage />} />
        </Routes>
      </Shell>
    </HashRouter>
  );
}
